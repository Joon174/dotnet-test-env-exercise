// <auto-generated />
using System;
using ChessGame.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace StewChessExample.Migrations
{
    [DbContext(typeof(ChessGameDbContext))]
    [Migration("20250307003230_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ChessGame.Models.ChessGameEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BlackPlayerName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("WhitePlayerName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ChessGames");
                });

            modelBuilder.Entity("ChessGame.Models.PieceMoveEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ChessGameEventId")
                        .HasColumnType("integer");

                    b.Property<string>("FromPosition")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Piece")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ToPosition")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Turn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("gameId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ChessGameEventId");

                    b.ToTable("PieceMoveEvents");
                });

            modelBuilder.Entity("ChessGame.Models.PieceMoveEvent", b =>
                {
                    b.HasOne("ChessGame.Models.ChessGameEvent", null)
                        .WithMany("PieceMoveEvents")
                        .HasForeignKey("ChessGameEventId");
                });

            modelBuilder.Entity("ChessGame.Models.ChessGameEvent", b =>
                {
                    b.Navigation("PieceMoveEvents");
                });
#pragma warning restore 612, 618
        }
    }
}
